 // final 변수와 상수
 
 class FinalField {

    final int value;
    static final int MAX_VALUE = 10;    //상수값일 때는 변수의 이름을 대문자와 "_"를 사용한다.(관례)


    FinalField(int value)
    {
        this.value = value;
    }

    public void changeValue()
    {
        //this.value = 10;        // 컴파일 오류 생성자에서 이미 변수의 값을 1회 변경했기에 메서드로 불가능
    }

    public void ChangeMaxValue()
    {
        //FinalField.MAX_VALUE = 10;    // 컴파일 오류 이미 상수이기 때문.
    }
    
}
class Data{
    int value;
}



public class FinalLocalMain {
    public static void main(String[] args) {
    
        //final 지역변수
        final int value;
        value = 10;
        //value = 20; 컴파일 오류 why)final 키워드가 붙은 변수는 최초 1회만 값변경 가능.

        //static void method (final int parameter)
        {
            //parameter = 20;       컴파일 오류 why?)파라미터에 final 변수가 들어오면 파라미터의 값 변경 불가
        }

        final Data data1 = new Data();

        data1.value = 10;           // final로 인스턴스를 생성해도 인스턴스의 필드값은 변경 할 수 있다.
        data1.value = 20;

        //data1 = new Data()        // 하지만 새로운 인스턴스를 참조 할 수 없다.

    }
}
/*정리:
 * 일반형 변수: 일반형변수(int, double, boolean)에 final 을 붙이면 최초 1회를 제외한 값 변경은 불가하다.
 *              - static final 은 그 클래스의 상수갑이다(ex: 최대 유저 수, 시간 등등) 변수 선언의 규칙은 MAX_USER_COUNT 같이 대문자 + 언더바로 선언한다(관례)
 * 참조형 변수: 참조형 변수는 참조하는 객체(인스턴스)의 필드값은 변경가능하지만 최초 1회를 제외하고 변경할 수 없다
 */
