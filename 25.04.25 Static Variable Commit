//static 변수

class Data {
    int value;

    //인스턴스를 생성할 때마다 증가시키는 Count 변수를 만들고 싶다
    
    int instanceCount = 0; // 인스턴수 내부에 있는 Count변수    
    static int staticCount = 0; // 인스턴스 외부에 있는 정적 변수 Count 변수

    Data()
    {
        // 똑같이 Data 객체가 하나씩 생성될 때마다count 변수를 1씩 증가시킨다
        instanceCount++; 
        staticCount++;
    }
    
    void getInfo()
    {
        System.out.println("instanceCount 값: "+instanceCount + " staticCounter 값: "+ staticCount);
    }

}
public class staticMain {
    public static void main (String[] arg){
        Data data1 = new Data();
        data1.getInfo();

        Data data2 = new Data();
        data2.getInfo();

        Data data3 = new Data();
        data3.getInfo();

        /*  실행결과

            instanceCount 값: 1 staticCounter 값: 1
            instanceCount 값: 1 staticCounter 값: 2
            instanceCount 값: 1 staticCounter 값: 3

            예상한 결과 값과 달리 instanceCount 값은 계속 1이다
            >> why? 바로 instanceCount 값은 정말 말 그대로 인스턴스 내부의 귀속된 멤버변수이다.
                Data 객체는 서로 다른 객체에게 영향을 주지 못하므로 각 인스턴스가 생성될 때 +1 되는 거 말고는 
                변하지 않는 것이다.
            
            반대로 staticCounter의 값은 의도한 결과값이다.
            >> why? staticCounter는 말 그대로 static 인스턴스 외부 즉 클래스에 있는 변수이기 때문이다
                인스턴스와 관계없이 static은 클래스에서 공유되는 변수이기에 의도한 값대로 나온다
                즉 클래스에서의 전체변수를 static 변수라고 한다.

            *주의점 static 변수에 접근 할때
            data1.staticCount   <<이렇게 접근하면 자칫 인스턴스의 멤버 변수로 오해 할 수 있으므로
            Data.staticCount    << 이렇게 클래스를 통해서 접근하는 것이 더 명확하다!

         */
    }
}
