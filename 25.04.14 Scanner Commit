import java.util.Scanner;
//java에서 지원하는 클래스에서 Scanner란 클래스를 참조한다

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        //Scaaner란 신규 클래스를 생성한다 역활은 키보드의 입력을 변수에입력해주는 것


        int num = scanner.nextInt();            // 정수형 변수를 키보드로 입력받음
        double dob = scanner.nextDouble();      // 실수형 변수를 키보드로 입력받음
        String str = scanner.nextLine();        // 문자열 변수를 키보드로 입력받음
        }


    }
}

/* 자바는 왜 이딴식으로 입력 받는가 궁금해져서 알아봄
 * 자바는 객체지향언어라는 부분에서 c와 같지만 철학이 남다름
 * "모든것은 객체이다" 라는 ㅈ간지나는 철학이 있음 이래서 프로그램을 실행하는 main도 class로 선언을 해줘야하는거임
 * 그러면 뭐가 좋냐 ->> 코드 관리 및 협업성이 증가함 예를 들어 c언어는 계산기를 만들면 그 코드 하나가 있는 파일로 끝나지만 나중에 유지 및 보수를 하려면 그 프로그램 전체를
 * 뜯어 봐야함 하지만 자바는 class로 모든것이 이루어져 있기 때문에 개발 과정에서부터 객체를 자연스럽게 만들게 되고 이로 인해 추후 유지 및 보수가 좋아진다 >>이건 내 추측 >> 맞다 ㅇㅇ
 * 
 * 그래서 Scanner은 왜 저따구인가 하면 자바랑 c는 근본적으로 다름 
 * c의 가장 큰 장점은 메모리를 직접 컨트롤 가능하다는 것  하지만 이거는 양날의 검임 혹시나 메모리를 지정해주고 해제해주지않는다면 메모리 누수가 발생할 수도 있음 
 * java는 이딴거 ㅈ까라 하고 그냥 내가 알아서 메모리는 관리 해줄테니깐 개발에만 집중해! 이런거임 
 * 그래서 둘의 차이가 포인터의 유무(포인터는 메모리 영역에서 활동하는 거니깐)
 * 둘 다 장단점이 있는 듯 
 * 
 *      
 * 
 * 
*/
